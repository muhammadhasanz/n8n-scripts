{
  "id": "e3jKOqUxBP61285A",
  "name": "Idebku",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        320,
        -64
      ],
      "id": "f7673fc2-0fb4-4ae6-aaf3-c78871289a67",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "https://idebku.ojk.go.id/Public/PendaftaranOnline/PreRegister",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={{ $('Headers').item.json.toJsonString() }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          },
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        928,
        128
      ],
      "id": "9b9141ba-a703-42c6-8d19-ae26b8e3a87c",
      "name": "Get Initial Requirement",
      "retryOnFail": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Extract the captcha from the image",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Kamu adalah pembaca teks dari gambar (OCR).\nTugasmu:\n\nMembaca teks dari input biner {{ $('Download the Captcha').item.binary }}.\n\nMenjaga keakuratan huruf besar dan huruf kecil, kamu juga bisa memastikannya dengan ukurannya krena ini bukan model huruf berkait.\n\nIMPORTANT Pastinkan mengembalikan string tanpa spasi.\n\nMengembalikan hasil dalam format text captcha dengan struktur berikut:\n\nhasil_teks\n\n\nJika teks tidak terbaca, isi dengan nilai null:\n\nnull\n\n\nJangan keluarkan penjelasan tambahan, hanya captcha saja."
            },
            {
              "type": "HumanMessagePromptTemplate",
              "messageType": "imageBinary"
            }
          ]
        }
      },
      "id": "9452b66f-7f6a-4a0d-9b1b-d28c3bcacc2d",
      "name": "Vertex A.I. extract text",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        560,
        368
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        560,
        592
      ],
      "id": "3167c3c1-2eaa-47f5-9222-0b8e06fc179e",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "NW8iHN0SzAA2GUte",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const preData = {\n  JDEBITUR_ID: \"1\",\n  SDEBITUR_ID: \"1\",\n  IDENTITAS_ID: \"1\",\n  TDAFTAR_IDENTITAS_NO: \"7371021706000001\",\n};\n\nfunction cmdEncrypt(dateInput = new Date()) {\n  const year  = dateInput.getFullYear();\n  const month = dateInput.getMonth() + 1; // bulan 0-based\n  const day   = dateInput.getDate();\n  const hour  = dateInput.getHours().toString().padStart(2, '0');\n  const min   = dateInput.getMinutes().toString().padStart(2, '0');\n  const sec   = dateInput.getSeconds().toString().padStart(2, '0');\n\n  const time = `${year}-${month}-${day}-${hour}-${min}-${sec}`;\n  return Buffer.from(time).toString(\"base64\");\n}\n\n// Fungsi untuk ekstraksi values menggunakan regex\nfunction extractValues(htmlContent) {\n  const values = {};\n\n  // Regex patterns untuk setiap field\n  const patterns = {\n    TDAFTAR_ID: /TDAFTAR_ID[^>]*value=\"([^\"]*)\"/,\n    __TDAFTAR_IDSecToken: /__TDAFTAR_IDSecToken[^>]*value=\"([^\"]*)\"/,\n    ReCaptchaToken: /ReCaptchaToken[^>]*value=\"([^\"]*)\"/,\n    __RequestVerificationToken: /__RequestVerificationToken[^>]*value=\"([^\"]*)\"/,\n  };\n\n  // Ekstrak values menggunakan regex\n  for (const [key, pattern] of Object.entries(patterns)) {\n    const match = htmlContent.match(pattern);\n    values[key] = match ? match[1] || null : null;\n  }\n\n  return values;\n}\n\n// Ambil HTML content dari input item\nconst htmlContent = $(\"Get Initial Requirement\").first().json.data;\n\nif (!htmlContent) {\n  throw new Error(\n    \"No HTML content found in input. Expected field: html, body, or content\",\n  );\n}\n\n// Ekstrak values\nconst extractedValues = extractValues(htmlContent);\n\nconst data = Object.assign(extractedValues, preData, {\n  postm: cmdEncrypt(),\n  CaptchaWsCode: $input.first().json.text\n});\n\n// Return hasil untuk output\nreturn [\n  {\n    json: {\n      data,\n      timestamp: new Date().toISOString(),\n      success: true,\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        928,
        368
      ],
      "id": "c5c2dd31-bf58-43af-9ece-4f59372bf7b4",
      "name": "Prepare the Post Data"
    },
    {
      "parameters": {
        "url": "https://idebku.ojk.go.id/get-captcha-image",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={{ $('Headers').item.json.toJsonString() }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          },
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        320,
        368
      ],
      "id": "3589bbb2-509a-49c4-954e-b17e24376f28",
      "name": "Download the Captcha",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5f19eb30-efa1-47f5-9f68-309c91996ca6",
                    "leftValue": "={{ $json.data }}",
                    "rightValue": "Maaf, pendaftaran belum berhasil|Captcha tidak valid",
                    "operator": {
                      "type": "string",
                      "operation": "notRegex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Others"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data }}",
                    "rightValue": "Maaf, pendaftaran belum berhasil",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "41a7a108-1cdb-4ddf-b9bb-71b9f6a64748"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pendaftaran belum berhasil"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f63b5c27-8abb-4f27-a9fa-e266e1ec8f25",
                    "leftValue": "={{ $json.data }}",
                    "rightValue": "Captcha tidak valid",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Captcha tidak valid"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1456,
        432
      ],
      "id": "2406d849-a964-4623-b2c3-52ab62d46abc",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://idebku.ojk.go.id/Public/PendaftaranOnline/PreRegister",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{ $('Get Initial Requirement').item.json.headers['set-cookie'][0].split(';')[0] }};{{ $('Download the Captcha').item.json.headers['set-cookie'][0].split(';')[0] }};{{ $('Get Initial Requirement').item.json.headers['set-cookie'][1].split(';')[0] }};{{ $('Get Initial Requirement').item.json.headers['set-cookie'][2].split(';')[0] }};"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "TDAFTAR_ID",
              "value": "={{ $json.data.TDAFTAR_ID }}"
            },
            {
              "name": "__TDAFTAR_IDSecToken",
              "value": "={{ $json.data.__TDAFTAR_IDSecToken }}"
            },
            {
              "name": "JDEBITUR_ID",
              "value": "={{ $json.data.JDEBITUR_ID }}"
            },
            {
              "name": "SDEBITUR_ID",
              "value": "={{ $json.data.SDEBITUR_ID }}"
            },
            {
              "name": "IDENTITAS_ID",
              "value": "={{ $json.data.IDENTITAS_ID }}"
            },
            {
              "name": "TDAFTAR_IDENTITAS_NO",
              "value": "={{ $json.data.TDAFTAR_IDENTITAS_NO }}"
            },
            {
              "name": "ReCaptchaToken",
              "value": "={{ $json.data.ReCaptchaToken }}"
            },
            {
              "name": "CaptchaWsCode",
              "value": "={{ $json.data.CaptchaWsCode }}"
            },
            {
              "name": "postm",
              "value": "={{ $json.data.postm }}"
            },
            {
              "name": "__RequestVerificationToken",
              "value": "={{ $json.data.__RequestVerificationToken }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          },
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        368
      ],
      "id": "f5c2577c-96cd-471c-8963-4669f81026b9",
      "name": "Reqeust Registration",
      "retryOnFail": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1712,
        576
      ],
      "id": "6eb161ad-40a3-4cad-baed-f3c7d38e3820",
      "name": "Wait",
      "webhookId": "be96c55c-e1e4-45cc-a766-23c72aa9b376"
    },
    {
      "parameters": {
        "fromEmail": "Keith Ritherus <noreply@n8n.keithritherus.my.id>",
        "toEmail": "mhmmdhasanz@gmail.com",
        "subject": "Next Process",
        "emailFormat": "text",
        "text": "=Execution ID: {{ $execution.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1712,
        304
      ],
      "id": "ecdbfaec-de25-46ba-b17c-9b2517eb7d61",
      "name": "Send email",
      "webhookId": "0a7e52e0-e1e3-4adf-89ff-4a50d6dec602",
      "credentials": {
        "smtp": {
          "id": "q4Ke00FJX1dwvpvz",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "*/10 0-30 7,8,9,12,14 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        320,
        128
      ],
      "id": "e09df858-647c-462e-99dc-21b0ca89ea20",
      "name": "Schedule Trigger",
      "retryOnFail": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "jsCode": "const headers = {\n  \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\",\n  \"Accept-Language\": \"id,en-US;q=0.9,en;q=0.8,ar;q=0.7,az;q=0.6\",\n  \"Cache-Control\": \"max-age=0\",\n  \"Connection\": \"keep-alive\",\n  \"Content-Type\": \"application/x-www-form-urlencoded\",\n  \"Origin\": \"https://idebku.ojk.go.id\",\n  \"Referer\": \"https://idebku.ojk.go.id/Public/PendaftaranOnline/PreRegister\",\n  \"Sec-Fetch-Dest\": \"document\",\n  \"Sec-Fetch-Mode\": \"navigate\",\n  \"Sec-Fetch-Site\": \"same-origin\",\n  \"Sec-Fetch-User\": \"?1\",\n  \"Upgrade-Insecure-Requests\": \"1\",\n  \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0\",\n  \"sec-ch-ua\": \"\\\"Chromium\\\";v=\\\"140\\\", \\\"Not=A?Brand\\\";v=\\\"24\\\", \\\"Microsoft Edge\\\";v=\\\"140\\\"\",\n  \"sec-ch-ua-mobile\": \"?0\",\n  \"sec-ch-ua-platform\": \"\\\"Windows\\\"\"\n};\n\nreturn [headers];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        128
      ],
      "id": "9af18c73-cf77-4535-a85d-1e841afe04a4",
      "name": "Headers"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Headers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Initial Requirement": {
      "main": [
        [
          {
            "node": "Download the Captcha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex A.I. extract text": {
      "main": [
        [
          {
            "node": "Prepare the Post Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vertex A.I. extract text",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Prepare the Post Data": {
      "main": [
        [
          {
            "node": "Reqeust Registration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the Captcha": {
      "main": [
        [
          {
            "node": "Vertex A.I. extract text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reqeust Registration": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Download the Captcha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Headers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send email": {
      "main": [
        []
      ]
    },
    "Headers": {
      "main": [
        [
          {
            "node": "Get Initial Requirement",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Jakarta",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "triggerCount": 1,
  "versionId": "e82d88c3-12af-461c-951d-456d228bbc4b",
  "owner": {
    "type": "personal",
    "projectId": "UH5LnHxMjlIlu2W3",
    "projectName": "Muhammad Hasan Z <mhmmdhasanz@gmail.com>",
    "personalEmail": "mhmmdhasanz@gmail.com"
  },
  "parentFolderId": null,
  "isArchived": false
}